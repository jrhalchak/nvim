-----------------------------------------------------------
-- Dashboard configuration file
-----------------------------------------------------------

-- Plugin: alpha-nvim
-- url: https://github.com/goolord/alpha-nvim

-- For configuration examples see: https://github.com/goolord/alpha-nvim/discussions/16

local status_ok, alpha = pcall(require, "alpha")
if not status_ok then
  return
end

-- local colors_status_ok, scheme = pcall(require, "vscode.colors")
-- if not colors_status_ok then
-- 	return
-- end

-- local c = scheme.get_colors()

local dashboard = require "alpha.themes.dashboard"

-- local om = {
  -- [[   `   ░██▒░     .                     ██             ]],
  -- [[ .   ▒███████▒      .  ███████░    ▓░  ▓▒   █         ]],
  -- [[   ▒████▓▓▓████     ░█████▓▓████   ▓██    ▓██         ]],
  -- [[ ░████▒   ▒▓████   ▓███▓▒   ▓████░  ▓██████▓          ]],
  -- [[ ▒▓███     ▓████   ▒▓██   .  ▓████   ▒████▒           ]],
  -- [[  ▒▓███  . ████▓             ▓████                    ]],
  -- [[   ▒▓█░    ███▓▒    .       ████▓   ░███░             ]],
  -- [[    ▒      ████▓         ▒████▓░   ████████           ]],
  -- [[       .   ▓████      ' ▒████▓██████▓▓▓▓████  ▓       ]],
  -- [[          ░▓████         ▒▓███████▓    ▒▓████ ▒▓█     ]],
  -- [[    .`   . ▒▓███▒   .       ▓████▒     ▓███▓   ▒▓██   ]],
  -- [[            ▓▓███▒░  `      ░▓███▓    ▓████     ▓███  ]],
  -- [[             ▓████▒░       ░░▓███▓    ▓████░    ▒▓███ ]],
  -- [[  .         `  ▓████▒░   ░░████▓░     ▓▓████████████▓ ]],
  -- [[       .        ▒▓███████████▓░         ▓█████████▓▒  ]],
  -- [[   `         .    ▒▓███████▓▒            ▒▓▓█████▓▒   ]],
-- }

local banners = {
  {
    [[                                                                   ]],
    [[                                                                   ]],
    [[ ███▄▄▄▄      ▄████████  ▄██████▄   ▄█    █▄   ▄█    ▄▄▄▄███▄▄▄▄   ]],
    [[ ███▀▀▀██▄   ███    ███ ███    ███ ███    ███ ███  ▄██▀▀▀███▀▀▀██▄ ]],
    [[ ███   ███   ███    █▀  ███    ███ ███    ███ ███▌ ███   ███   ███ ]],
    [[ ███   ███  ▄███▄▄▄     ███    ███ ███    ███ ███▌ ███   ███   ███ ]],
    [[ ███   ███ ▀▀███▀▀▀     ███    ███ ███    ███ ███▌ ███   ███   ███ ]],
    [[ ███   ███   ███    █▄  ███    ███ ███    ███ ███  ███   ███   ███ ]],
    [[ ███   ███   ███    ███ ███    ███ ███    ███ ███  ███   ███   ███ ]],
    [[  ▀█   █▀    ██████████  ▀██████▀   ▀██████▀  █▀    ▀█   ███   █▀  ]],
    [[                                                                   ]],
    [[                                                                   ]],
  },
  {
    [[                                                      ]],
    [[                                                      ]],
    [[                                                      ]],
    [[ ███▄    █ ▓█████  ▒█████   ██▒   █▓ ██▓ ███▄ ▄███▓   ]],
    [[  ██ ▀█   █ ▓█   ▀ ▒██▒  ██▒▓██░   █▒▓██▒▓██▒▀█▀ ██▒  ]],
    [[ ▓██  ▀█ ██▒▒███   ▒██░  ██▒ ▓██  █▒░▒██▒▓██    ▓██░  ]],
    [[ ▓██▒  ▐▌██▒▒▓█  ▄ ▒██   ██░  ▒██ █░░░██░▒██    ▒██   ]],
    [[ ▒██░   ▓██░░▒████▒░ ████▓▒░   ▒▀█░  ░██░▒██▒   ░██▒  ]],
    [[ ░ ▒░   ▒ ▒ ░░ ▒░ ░░ ▒░▒░▒░    ░ ▐░  ░▓  ░ ▒░   ░  ░  ]],
    [[ ░ ░░   ░ ▒░ ░ ░  ░  ░ ▒ ▒░    ░ ░░   ▒ ░░  ░      ░  ]],
    [[    ░   ░ ░    ░   ░ ░ ░ ▒       ░░   ▒ ░░      ░     ]],
    [[          ░    ░  ░    ░ ░        ░   ░         ░     ]],
    [[                                 ░                    ]],
    [[                                                      ]],
  },
  {
    [[                                                                     ]],
    [[                                                                     ]],
    [[  ██████   █████                                ███                  ]],
    [[ ░░██████ ░░███                                ░░░                   ]],
    [[  ░███░███ ░███   ██████   ██████  █████ █████ ████  █████████████   ]],
    [[  ░███░░███░███  ███░░███ ███░░███░░███ ░░███ ░░███ ░░███░░███░░███  ]],
    [[  ░███ ░░██████ ░███████ ░███ ░███ ░███  ░███  ░███  ░███ ░███ ░███  ]],
    [[  ░███  ░░█████ ░███░░░  ░███ ░███ ░░███ ███   ░███  ░███ ░███ ░███  ]],
    [[  █████  ░░█████░░██████ ░░██████   ░░█████    █████ █████░███ █████ ]],
    [[ ░░░░░    ░░░░░  ░░░░░░   ░░░░░░     ░░░░░    ░░░░░ ░░░░░ ░░░ ░░░░░  ]],
    [[                                                                     ]],
  },
  {
    [[                                                                              ]],
    [[                                                                              ]],
    [[                                                                              ]],
    [[ ██████   █████ ██████████    ███████    █████   █████ █████ ██████   ██████  ]],
    [[ ░░██████ ░░███ ░░███░░░░░█  ███░░░░░███ ░░███   ░░███ ░░███ ░░██████ ██████  ]],
    [[  ░███░███ ░███  ░███  █ ░  ███     ░░███ ░███    ░███  ░███  ░███░█████░███  ]],
    [[  ░███░░███░███  ░██████   ░███      ░███ ░███    ░███  ░███  ░███░░███ ░███  ]],
    [[  ░███ ░░██████  ░███░░█   ░███      ░███ ░░███   ███   ░███  ░███ ░░░  ░███  ]],
    [[  ░███  ░░█████  ░███ ░   █░░███     ███   ░░░█████░    ░███  ░███      ░███  ]],
    [[  █████  ░░█████ ██████████ ░░░███████░      ░░███      █████ █████     █████ ]],
    [[ ░░░░░    ░░░░░ ░░░░░░░░░░    ░░░░░░░         ░░░      ░░░░░ ░░░░░     ░░░░░  ]],
    [[                                                                              ]],
  },
  {
    [[                                   ]],
    [[                                   ]],
    [[                                   ]],
    [[  ▐ ▄ ▄▄▄ .       ▌ ▐·▪  • ▌ ▄ ·.  ]],
    [[ •█▌▐█▀▄.▀·▪     ▪█·█▌██ ·██ ▐███▪ ]],
    [[ ▐█▐▐▌▐▀▀▪▄ ▄█▀▄ ▐█▐█•▐█·▐█ ▌▐▌▐█· ]],
    [[ ██▐█▌▐█▄▄▌▐█▌.▐▌ ███ ▐█▌██ ██▌▐█▌ ]],
    [[ ▀▀ █▪ ▀▀▀  ▀█▄▀▪. ▀  ▀▀▀▀▀  █▪▀▀▀ ]],
    [[                                   ]],
    [[                                   ]],
  },
  {
    [[                                                                                                ]],
    [[  _____   ______        ______           _____     ____      ____  ____      ______  _______    ]],
    [[ |\░░░░\ |\░░░░░\   ___|\░░░░░\     ____|\░░░░\   |░░░░|    |░░░░||░░░░|    |░░░░░░\/░░░░░░░\   ]],
    [[  \\░░░░\| \░░░░░\ |░░░░░\░░░░░\   /░░░░░/\░░░░\  |░░░░|    |░░░░||░░░░|   /░░░░░░░░░░/\░░░░░\  ]],
    [[   \|░░░░\  \░░░░░||░░░░░,░░░░░/| /░░░░░/  \░░░░\ |░░░░|    |░░░░||░░░░|  /░░░░░/\░░░/ /\░░░░░| ]],
    [[    |░░░░░\  |░░░░||░░░░░\███\█|/|░░░░░|    |░░░░||░░░░|    |░░░░||░░░░| /░░░░░/\ \░/ / /░░░░/| ]],
    [[    |░░░░░░\ |░░░░||░░░░░/___/|  |░░░░░|    |░░░░||░░░░|    |░░░░||░░░░||░░░░░|  \|█|/ /░░░░/ | ]],
    [[    |░░░░|\░\|░░░░||░░░░░\████|\ |\░░░░░\  /░░░░/||\░░░░\  /░░░░/||░░░░||░░░░░|       |░░░░|  | ]],
    [[    |░░░░||\░░░░░/||░░░░░'░░░░░/|| \░░░░░\/░░░░/ || \░░░░\/░░░░/ ||░░░░||\░░░░\       |░░░░|  / ]],
    [[    |████|/ \|███|||████/░░░░░/ | \ |████||████| / \ |███||███| / |████|| |████|      |████| /  ]],
    [[    |████|   |███|/|████|█████| /  \|████||████|/   \|███||███|/  |████| \|████|      |████|/   ]],
    [[      \(       )/    \( |█████|/      \(    )/        \(    )/      \(      \(          )/      ]],
    [[       '       '      '    )/          '    '          '    '        '       '          '       ]],
    [[                           '                                                                    ]],
  },
  {
    [[                                                                                                    ]],
    [[                                                                                                    ]],
    [[    _____   ______        ______           _____     ____      ____  ____      ______  _______      ]],
    [[   │╲░░░░╲ │╲░░░░░╲   ___│╲░░░░░╲     ____│╲░░░░╲   │░░░░│    │░░░░││░░░░│    │░░░░░░╲╱░░░░░░░╲     ]],
    [[ ╭┄┄╲╲░░░░╲│▚╲░░░░░╲┄│░░░░░╲░░░░░╲┄┄┄╱░░░░░╱╲░░░░╲┄┄│░░░░│┄┄┄┄│░░░░││░░░░│┄┄┄╱░░░░░░░░░░╱╲░░░░░╲┄┄╮ ]],
    [[ ┊   ╲│░░░░╲▚▚╲░░░░░││░░░░░,░░░░░╱│ ╱░░░░░╱▞▚╲░░░░╲ │░░░░│    │░░░░││░░░░│  ╱░░░░░╱╲░░░╱▞╱╲░░░░░│ ┊ ]],
    [[ ┊    │░░░░░╲▚▚│░░░░││░░░░░╲███╲█│╱│░░░░░│▞╱╲▚│░░░░││░░░░│    │░░░░││░░░░│ ╱░░░░░╱╲▚╲░╱▞╱ ╱░░░░╱│ ┊ ]],
    [[ ┊    │░░░░░░╲▚│░░░░││░░░░░╱░░░╱│  │░░░░░│╱  ╲│░░░░││░░░░│    │░░░░││░░░░││░░░░░│  ╲│█│╱ ╱░░░░╱▞│ ┊ ]],
    [[ ┊    │░░░░│╲░╲│░░░░││░░░░░╲████│╲ │╲░░░░░╲  ╱░░░░╱││╲░░░░╲  ╱░░░░╱││░░░░││░░░░░│       │░░░░│▞▞│ ┊ ]],
    [[ ┊    │░░░░││╲░░░░░╱││░░░░░'░░░░░╱││▚╲░░░░░╲╱░░░░╱▞││▚╲░░░░╲╱░░░░╱▞││░░░░││╲░░░░╲       │░░░░│▞▞╱ ┊ ]],
    [[ ╰┄┄┄┄│████│╱┄╲│███│││████╱░░░░░╱▞│┄╲▚│████││████│▞╱┄╲▚│███││███│▞╱┄│████││▚│████│┄┄┄┄┄┄│████│▞╱┄┄╯ ]],
    [[      │████│   │███│╱│████│█████│▞╱  ╲│████││████│╱   ╲│███││███│╱  │████│ ╲│████│      │████│╱     ]],
    [[        ╲(       )╱    ╲( │█████│╱      ╲(    )╱        ╲(    )╱      ╲(      ╲(          )╱        ]],
    [[         '       '      '    )╱          '    '          '    '        '       '          '         ]],
    [[                             '                                                                      ]],
  },
  {
    [[                                           ]],
    [[                                           ]],
    [[        ▄   ▄███▄   ████▄     ▄   ▄█ █▀▄▀█ ]],
    [[     █  █▀   ▀  █   █      █  ██ █ █ █     ]],
    [[ ██   █ ██▄▄    █   █ █     █ ██ █ ▄ █     ]],
    [[ █ █  █ █▄   ▄▀ ▀████  █    █ ▐█ █   █     ]],
    [[ █  █ █ ▀███▀           █  █   ▐    █      ]],
    [[ █   ██                  █▐        ▀       ]],
    [[                         ▐                 ]],
    [[                                           ]],
  },
  {
    [[  ▄▀▀▄ ▀▄  ▄▀▀█▄▄▄▄  ▄▀▀▀▀▄   ▄▀▀▄ ▄▀▀▄  ▄▀▀█▀▄    ▄▀▀▄ ▄▀▄ ]],
    [[ █  █ █ █ ▐  ▄▀   ▐ █      █ █   █    █ █   █  █  █  █ ▀  █ ]],
    [[ ▐  █  ▀█   █▄▄▄▄▄  █      █ ▐  █    █  ▐   █  ▐  ▐  █    █ ]],
    [[   █   █    █    ▌  ▀▄    ▄▀    █   ▄▀      █       █    █  ]],
    [[ ▄▀   █    ▄▀▄▄▄▄     ▀▀▀▀       ▀▄▀     ▄▀▀▀▀▀▄  ▄▀   ▄▀   ]],
    [[ █    ▐    █    ▐                       █       █ █    █    ]],
    [[ ▐         ▐                            ▐       ▐ ▐    ▐    ]],
  },
}

-- Map over the headers, setting a different color for each line.
-- This is done by setting the Highligh to StartLogoN, where N is the row index.
-- Define StartLogo1..StartLogoN to get a nice gradient.
local function header_color()
  local lines = {}
  for i, line_chars in pairs(banners[7]) do
    local hi = "StartLogo" .. i
    local line = {
      type = "text",
      val = line_chars,
      opts = {
        hl = hi,
        shrink_margin = false,
        position = "center",
      },
    }
    table.insert(lines, line)
  end

  return lines
end

local function button(sc, txt, keybind, keybind_opts)
  local b = dashboard.button(sc,txt,keybind,keybind_opts)
  b.opts.hl_shortcut = "DashboardButton"
  return b
end

-- dashboard.section.header.val = om

dashboard.section.buttons.val = {
  button("          e ", "  " .. " New file", ":ene <BAR> startinsert <CR>"),
  button(" <leader>ff ", "  " .. " Find file", ":Telescope find_files <CR>"),
  button(" <leader>fp ", "  " .. " Find project", ":lua require('telescope').extensions.projects.projects()<CR>"),
  button(" <leader>fr ", "  " .. " Recent files", ":Telescope oldfiles <CR>"),
  button(" <leader>fg ", "  " .. " Find Text", ":Telescope live_grep <CR>"),
  button("          c ", "  " .. " Config", ":e $MYVIMRC <CR>"),
  button("          q ", "  " .. " Quit", ":qa<CR>"),
}

local function footer()
  return {
    [[ ]],
    [[ ]],
    [[ ]],
    [[ ]],
    [[ ]],
    [[ ]],
    [[░░▒▒▓▓▓▓                                  ▓▓░▒▒▒░░]]
  }
end

dashboard.section.footer.val = footer()

dashboard.section.header.type = "group"
dashboard.section.header.val = header_color()
dashboard.section.header.opts.position = "center"

dashboard.section.footer.opts.hl = "DashboardFooter"
dashboard.section.buttons.opts.hl = "Keyword"

dashboard.opts.opts.noautocmd = true

alpha.setup(dashboard.opts)

local hl = vim.api.nvim_set_hl

-- hl(0, 'StartLogo1', { fg='#0a7aca' })
-- hl(0, 'StartLogo2', { fg='#1d7bbc' })
-- hl(0, 'StartLogo3', { fg='#427ea2' })
-- hl(0, 'StartLogo4', { fg='#457ea0' })
-- hl(0, 'StartLogo5', { fg='#457ea0' })
-- hl(0, 'StartLogo6', { fg='#578093' })
-- hl(0, 'StartLogo7', { fg='#7c8279' })
-- hl(0, 'StartLogo8', { fg='#bf8749' })
-- hl(0, 'StartLogo9', { fg='#bf8749' })
-- hl(0, 'StartLogo10', { fg='#bf8749' })
-- hl(0, 'StartLogo11', { fg='#b38651' })
-- hl(0, 'StartLogo12', { fg='#e38a30' })
-- TODO: this #ffff00 was vscode orange
-- hl(0, 'StartLogo13', { fg='#e38a30' })
-- hl(0, 'StartLogo14', { fg='#e38a30' })
-- hl(0, 'StartLogo15', { fg='#e38a30' })
-- hl(0, 'StartLogo1', { fg='#0a7aca' })
-- hl(0, 'StartLogo2', { fg='#1d7bbc' })
-- hl(0, 'StartLogo3', { fg='#427ea2' })
-- hl(0, 'StartLogo4', { fg='#457ea0' })
-- hl(0, 'StartLogo5', { fg='#457ea0' })
-- hl(0, 'StartLogo6', { fg='#578093' })
-- hl(0, 'StartLogo7', { fg='#6a8185' })
-- hl(0, 'StartLogo8', { fg='#7c8279' })
-- hl(0, 'StartLogo9', { fg='#9b8563' })
-- hl(0, 'StartLogo10', { fg='#9b8563' })
-- hl(0, 'StartLogo11', { fg='#b38651' })
-- hl(0, 'StartLogo12', { fg='#bf8749' })
-- hl(0, 'StartLogo13', { fg='#d4893b' })
-- hl(0, 'StartLogo14', { fg='#e38a30' })
-- hl(0, 'StartLogo15', { fg='#e7892c' })
-- hl(0, 'StartLogo16', { fg='#e38a30' })

-- TODO: this #333333 was vscode split dark
-- hl(0, 'DashboardButton', { fg='#ffff00', bg='#333333', italic=true, bold=true })

alpha.setup(dashboard.config)
